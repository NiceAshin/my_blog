(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{442:function(t,s,a){"use strict";a.r(s);var e=a(2),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"适配器模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适配器模式"}},[t._v("#")]),t._v(" 适配器模式")]),t._v(" "),s("p",[t._v("适配器模式主要用于将差异化的接口或属性统一输出为指定的格式.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/NiceAshin/FileStore/blogImage/DDD-2.png",alt:"application-service"}})]),t._v(" "),s("p",[t._v("在六边形架构中, 适配器的角色用于将外部客户的不同协议的请求处理器后统一调用领域服务, 同时又将领域服务对基础设施的操作请求转换为具体的技术设施所要求的协议格式.")]),t._v(" "),s("h2",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")])])}),[],!1,null,null,null);s.default=r.exports}}]);